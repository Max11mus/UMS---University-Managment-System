openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /teachers/{id}:
    get:
      tags:
        - teachers-rest-controller
      operationId: findTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    put:
      tags:
        - teachers-rest-controller
      operationId: updateTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    delete:
      tags:
        - teachers-rest-controller
      operationId: deleteTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /students/{id}:
    get:
      tags:
        - students-rest-controller
      operationId: findStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    put:
      tags:
        - students-rest-controller
      operationId: updateStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    delete:
      tags:
        - students-rest-controller
      operationId: deleteStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /teachers:
    get:
      tags:
        - teachers-rest-controller
      operationId: findTeachers
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    post:
      tags:
        - teachers-rest-controller
      operationId: addTeacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /students:
    get:
      tags:
        - students-rest-controller
      operationId: findStudents
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
    post:
      tags:
        - students-rest-controller
      operationId: addStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /timetable/teacher/{id}:
    get:
      tags:
        - time-table-rest-controller
      operationId: getTimeTableForTeacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: startDay
          in: query
          required: true
          schema:
            type: string
        - name: endDay
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableUnitDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /timetable/student/{id}:
    get:
      tags:
        - time-table-rest-controller
      operationId: getTimeTableForStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: startDay
          in: query
          required: true
          schema:
            type: string
        - name: endDay
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableUnitDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
  /lectures/{id}:
    get:
      tags:
        - lecture-rest-controller
      operationId: findLecture
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LectureDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                  - type: object
                  - $ref: '#/components/schemas/ErrorResponce'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponce'
components:
  schemas:
    ErrorResponce:
      type: object
      properties:
        httpStatusCode:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        description:
          type: string
    TeacherDto:
      required:
        - academicDegree
        - birthDate
        - email
        - employmentDate
        - hashedPassword
        - login
        - name
        - surname
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 20
          minLength: 0
          type: string
        surname:
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          type: string
          format: date
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
        login:
          maxLength: 255
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        avatarPath:
          maxLength: 1024
          minLength: 0
          type: string
        hashedPassword:
          maxLength: 255
          minLength: 0
          type: string
        academicDegree:
          maxLength: 255
          minLength: 0
          type: string
        employmentDate:
          type: string
          format: date
    StudentDto:
      required:
        - birthDate
        - email
        - enrollDate
        - hashedPassword
        - login
        - name
        - surname
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          maxLength: 20
          minLength: 0
          type: string
        surname:
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          type: string
          format: date
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
        login:
          maxLength: 255
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        avatarPath:
          maxLength: 1024
          minLength: 0
          type: string
        hashedPassword:
          maxLength: 255
          minLength: 0
          type: string
        dropoutDate:
          type: string
          format: date
        enrollDate:
          type: string
          format: date
    Group:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        students:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Student'
    Lecture:
      type: object
      properties:
        id:
          type: string
          format: uuid
        topic:
          type: string
        description:
          type: string
        teacher:
          $ref: '#/components/schemas/Teacher'
        subject:
          $ref: '#/components/schemas/Subject'
    Location:
      type: object
      properties:
        id:
          type: string
          format: uuid
        address:
          type: string
    Student:
      required:
        - enrollDate
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          format: date
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
        login:
          type: string
        email:
          type: string
        avatarPath:
          type: string
        hashedPassword:
          type: string
        enrollDate:
          type: string
          format: date
        dropoutDate:
          type: string
          format: date
    Subject:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    Teacher:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          format: date
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
        login:
          type: string
        email:
          type: string
        avatarPath:
          type: string
        hashedPassword:
          type: string
        academicDegree:
          type: string
        employmentDate:
          type: string
          format: date
    TimeTableUnitDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        location:
          $ref: '#/components/schemas/Location'
        lecture:
          $ref: '#/components/schemas/Lecture'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        begin:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    LectureDto:
      required:
        - description
        - subject
        - teacher
        - topic
      type: object
      properties:
        id:
          type: string
          format: uuid
        topic:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1024
          minLength: 0
          type: string
        teacher:
          $ref: '#/components/schemas/Teacher'
        subject:
          $ref: '#/components/schemas/Subject'
